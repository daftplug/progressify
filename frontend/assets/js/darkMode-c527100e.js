import{config as e}from"./frontend.js";import{g as n}from"./utils-b7f0f688.js";const{__:t}=wp.i18n;class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.styles=new Set,this.darkMode="enabled"===localStorage.getItem("darkMode"),this.type=e.jsVars.settings.uiComponents.darkMode.type,this.colorScheme={dark:{background:"#1a1a1a",surface:"#2d2d2d",surfaceLighter:"#404040",text:"#ffffff",textSecondary:"#e0e0e0",border:"#404040",link:"#66b3ff",linkVisited:"#b366ff",input:"#2d2d2d"},light:{background:"#ffffff",surface:"#f5f5f5",surfaceLighter:"#e0e0e0",text:"#333333",textSecondary:"#666666",border:"#dddddd",link:"#0066cc",linkVisited:"#551a8b",input:"#ffffff"}}}connectedCallback(){this.injectGlobalStyles(),this.render(),this.handleModeChange(),this.checkSystemPreference(),this.checkBatteryLevel()}injectGlobalStyles(){const e=document.createElement("style");e.textContent=`\n      /* Dark mode CSS variables */\n      :root {\n        --dm-transition-time: 0.2s;\n        ${Object.entries(this.colorScheme.light).map(([e,n])=>`--dm-${e}: ${n};`).join("\n")}\n      }\n\n      :root.dark {\n        ${Object.entries(this.colorScheme.dark).map(([e,n])=>`--dm-${e}: ${n};`).join("\n")}\n      }\n\n      :root.dark body {\n        background-color: var(--dm-background);\n        color: var(--dm-text);\n      }\n\n      /* Element specific styles */\n      :root.dark * {\n        transition: background-color var(--dm-transition-time) ease,\n                   color var(--dm-transition-time) ease,\n                   border-color var(--dm-transition-time) ease,\n                   box-shadow var(--dm-transition-time) ease;\n      }\n\n      :root.dark img:not([src*=".svg"]),\n      :root.dark video,\n      :root.dark iframe {\n        opacity: 0.8;\n        filter: brightness(0.9);\n      }\n\n      :root.dark img[src*=".svg"] {\n        filter: brightness(0.9) invert(1);\n      }\n\n      :root.dark input,\n      :root.dark textarea,\n      :root.dark select {\n        background-color: var(--dm-input);\n        color: var(--dm-text);\n        border-color: var(--dm-border);\n      }\n\n      :root.dark a:not([class]) {\n        color: var(--dm-link);\n      }\n\n      :root.dark a:not([class]):visited {\n        color: var(--dm-linkVisited);\n      }\n\n      :root.dark [class*="shadow"],\n      :root.dark [class*="Shadow"] {\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3) !important;\n      }\n\n      :root.dark pre,\n      :root.dark code {\n        background-color: var(--dm-surfaceLighter);\n      }\n\n      :root.dark table,\n      :root.dark th,\n      :root.dark td {\n        border-color: var(--dm-border);\n      }\n\n      :root.dark th {\n        background-color: var(--dm-surface);\n      }\n\n      :root.dark tr:nth-child(even) {\n        background-color: var(--dm-surfaceLighter);\n      }\n\n      :root.dark blockquote {\n        background-color: var(--dm-surface);\n        border-left-color: var(--dm-border);\n      }\n\n      /* Handle common components and frameworks */\n      :root.dark [class*="header"],\n      :root.dark [class*="nav"],\n      :root.dark [class*="footer"] {\n        background-color: var(--dm-surface);\n      }\n\n      :root.dark [class*="card"],\n      :root.dark [class*="panel"],\n      :root.dark [class*="box"] {\n        background-color: var(--dm-surface);\n        border-color: var(--dm-border);\n      }\n\n      /* Handle WordPress specific elements */\n      :root.dark .wp-block-button__link {\n        background-color: var(--dm-surface);\n        color: var(--dm-text);\n      }\n\n      :root.dark .wp-block-quote {\n        border-color: var(--dm-border);\n      }\n    `,document.head.appendChild(e)}static findMenuElement(e){const n=["ul.menu","ul.nav-menu",".wp-block-navigation__container",".main-navigation ul",".primary-menu",".menu-primary"];for(const t of n){const n=e.querySelector(t);if(n&&"none"!==window.getComputedStyle(n).display&&n.querySelector("li"))return n}for(const n of e.children){if("ul"===n.tagName.toLowerCase()&&"none"!==window.getComputedStyle(n).display&&n.querySelector("li"))return n;const e=this.findMenuElement(n);if(e)return e}return null}static findHeader(){const e=["header.site-header","#masthead",".main-header","#site-header","#ast-mobile-header","#mobile-menu",".mobile-menu",".mobile-navigation",'[class*="header"]','[id*="header"]',"header","nav"];for(const n of e){const e=document.querySelectorAll(n);for(const n of e)if("none"!==window.getComputedStyle(n).display){const e=this.findMenuElement(n);if(e)return{container:n,menu:e}}}return null}static show(){const n=e.jsVars.settings.uiComponents.darkMode.type;let t=document.querySelector("pwa-dark-mode");if(!t)if(t=document.createElement("pwa-dark-mode"),"menu-switch"===n){const e=this.findHeader();if(null!=e&&e.menu){const n=document.createElement("li");n.className="menu-item pwa-dark-mode-item";const o=e.menu.querySelector("li");if(o){const e=Array.from(o.classList).filter(e=>!e.includes("current")&&!e.includes("active"));n.classList.add(...e)}n.appendChild(t),e.menu.appendChild(n)}}else document.body.appendChild(t);return t}async checkBatteryLevel(){if("on"===e.jsVars.settings.uiComponents.darkMode.batteryLow&&"getBattery"in navigator)try{const e=await navigator.getBattery();e.level<.1&&this.enableDarkMode(),e.addEventListener("levelchange",()=>{e.level<.1&&this.enableDarkMode()})}catch(e){console.warn("Battery status check failed:",e)}}checkSystemPreference(){"on"===e.jsVars.settings.uiComponents.darkMode.osAware&&(window.matchMedia("(prefers-color-scheme: dark)").matches&&this.enableDarkMode(),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",e=>{e.matches?this.enableDarkMode():this.disableDarkMode()}))}enableDarkMode(){document.documentElement.classList.add("dark"),localStorage.setItem("darkMode","enabled"),this.darkMode=!0,this.updateIcon(),this.dispatchEvent(new CustomEvent("darkModeChange",{detail:{enabled:!0},bubbles:!0}))}disableDarkMode(){document.documentElement.classList.remove("dark"),localStorage.setItem("darkMode","disabled"),this.darkMode=!1,this.updateIcon(),this.dispatchEvent(new CustomEvent("darkModeChange",{detail:{enabled:!1},bubbles:!0}))}updateIcon(){const e=this.shadowRoot.querySelector(".dark-mode-floating-icon, .dark-mode-menu-icon");e&&(e.innerHTML=this.darkMode?this.icons.dark:this.icons.light)}handleModeChange(){const e=this.shadowRoot.querySelector(".dark-mode-floating-button, .dark-mode-menu-button");e&&e.addEventListener("click",()=>{this.darkMode?this.disableDarkMode():this.enableDarkMode()}),"enabled"===localStorage.getItem("darkMode")&&this.enableDarkMode()}injectStyles(e){this.styles.add(e)}renderFloatingButton(){return this.injectStyles("\n      .dark-mode-floating {\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        z-index: 999;\n      }\n  \n      .dark-mode-floating-button {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 48px;\n        height: 48px;\n        padding: 12px;\n        background: var(--theme-color, #000000);\n        color: var(--text-color, #ffffff);\n        border: none;\n        border-radius: 50%;\n        cursor: pointer;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n        transition: opacity 0.3s, transform 0.2s;\n      }\n  \n      .dark-mode-floating-button:hover {\n        opacity: 0.8;\n        transform: scale(1.05);\n      }\n  \n      .dark-mode-floating-icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 24px;\n        height: 24px;\n      }\n    "),`\n      <div class="dark-mode-floating">\n        <button class="dark-mode-floating-button" aria-label="${t("Toggle dark mode")}">\n          <span class="dark-mode-floating-icon">\n            ${this.darkMode?this.icons.dark:this.icons.light}\n          </span>\n        </button>\n      </div>\n    `}renderMenuSwitch(){return this.injectStyles("\n      .dark-mode-menu {\n        display: flex;\n        align-items: center;\n      }\n  \n      .dark-mode-menu-button {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        padding: 8px;\n        background: none;\n        border: none;\n        color: inherit;\n        cursor: pointer;\n        transition: opacity 0.3s;\n        font-family: inherit;\n      }\n  \n      .dark-mode-menu-button:hover {\n        opacity: 0.8;\n      }\n  \n      .dark-mode-menu-icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 24px;\n        height: 24px;\n      }\n  \n      .dark-mode-menu-label {\n        font-size: 14px;\n        font-weight: inherit;\n        white-space: nowrap;\n      }\n    "),`\n      <div class="dark-mode-menu">\n        <button class="dark-mode-menu-button" aria-label="${t("Toggle dark mode")}">\n          <span class="dark-mode-menu-icon">\n            ${this.darkMode?this.icons.dark:this.icons.light}\n          </span>\n          <span class="dark-mode-menu-label">${t("Dark Mode")}</span>\n        </button>\n      </div>\n    `}render(){var t,o;const r=null!=(t=null==(o=e.jsVars.settings.webAppManifest)||null==(o=o.appearance)?void 0:o.themeColor)?t:"#000000",a=n(r);this.shadowRoot.innerHTML=`\n      <style>\n        :host {\n          --theme-color: ${r};\n          --text-color: ${a};\n        }\n        ${Array.from(this.styles).join("\n")}\n      </style>\n      ${"floating-button"===this.type?this.renderFloatingButton():this.renderMenuSwitch()}\n    `}}async function r(){const{device:n}=e.jsVars.userData;e.jsVars.settings.uiComponents.darkMode.supportedDevices.some(e=>"smartphone"===e&&n.isSmartphone||"tablet"===e&&n.isTablet||"desktop"===e&&n.isDesktop)&&(customElements.get("pwa-dark-mode")||customElements.define("pwa-dark-mode",o),o.show(),setTimeout(()=>{o.show()},1e3))}export{r as initDarkMode};
